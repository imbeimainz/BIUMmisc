[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 BIUMmisc authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/BIUMmisc_DE.html","id":"before-running-de-steps","dir":"Articles","previous_headings":"","what":"Before running DE steps","title":"Using the BIUMmisc package for DE analyses","text":"Load expression data DESeqDataSet object create associated annotation table. Similar Basic Protocol 3, load first required packages, create fundamental DESeqDataSet object used analysis (using ENSEMBL identifiers) - optionally, one can filter set lowly expressed genes specified chunk . Generate corresponding annotation table dds_macrophage, store anno_df.","code":"# Loading the packages library(\"pcaExplorer\") #> Welcome to pcaExplorer v2.31.0 #>  #> If you use pcaExplorer in your work, please cite: #>  #> Federico Marini, Harald Binder #> pcaExplorer: an R/Bioconductor package for interacting with RNA-seq principal components #> BMC Bioinformatics, 2019 - https://doi.org/10.1186/s12859-019-2879-1 library(\"ideal\") #> Welcome to ideal v1.29.0 #>  #> If you use ideal in your work, please cite: #>  #> Federico Marini, Jan Linke, Harald Binder #> ideal: an R/Bioconductor package for Interactive Differential Expression Analysis #> BMC Bioinformatics, 2020 - https://doi.org/10.1186/s12859-020-03819-5 #>  #> Attaching package: 'ideal' #> The following object is masked from 'package:BIUMmisc': #>  #>     sepguesser library(\"GeneTonic\")  # Loading the data library(\"macrophage\") library(\"DESeq2\") data(\"gse\", package = \"macrophage\") dds_macrophage <- DESeqDataSet(gse, design = ~line + condition) #> using counts and average transcript lengths from tximeta # Changing the ids, removing the GENCODE-specific suffix rownames(dds_macrophage) <- substr(rownames(dds_macrophage), 1, 15) dds_macrophage #> class: DESeqDataSet  #> dim: 58294 24  #> metadata(7): tximetaInfo quantInfo ... txdbInfo version #> assays(3): counts abundance avgTxLength #> rownames(58294): ENSG00000000003 ENSG00000000005 ... ENSG00000285993 #>   ENSG00000285994 #> rowData names(2): gene_id SYMBOL #> colnames(24): SAMEA103885102 SAMEA103885347 ... SAMEA103885308 #>   SAMEA103884949 #> colData names(15): names sample_id ... condition line # Filtering low expressed features keep <- rowSums(counts(dds_macrophage) >= 10) >= 6  dds_macrophage <- dds_macrophage[keep, ] dds_macrophage #> class: DESeqDataSet  #> dim: 17806 24  #> metadata(7): tximetaInfo quantInfo ... txdbInfo version #> assays(3): counts abundance avgTxLength #> rownames(17806): ENSG00000000003 ENSG00000000419 ... ENSG00000285982 #>   ENSG00000285994 #> rowData names(2): gene_id SYMBOL #> colnames(24): SAMEA103885102 SAMEA103885347 ... SAMEA103885308 #>   SAMEA103884949 #> colData names(15): names sample_id ... condition line # Construct the annotation data frame library(\"org.Hs.eg.db\") anno_df <- get_annotation_orgdb(dds = dds_macrophage,                                 orgdb_species = \"org.Hs.eg.db\",                                 idtype = \"ENSEMBL\") #> 'select()' returned 1:many mapping between keys and columns library(\"biomaRt\") mart <- useMart(biomart=\"ENSEMBL_MART_ENSEMBL\", dataset=\"hsapiens_gene_ensembl\")  anns <- getBM(attributes = c(\"ensembl_gene_id\", \"external_gene_name\", \"description\"),                filters = \"ensembl_gene_id\",               # filters = \"external_gene_name\",               values = rownames(dds_macrophage),                mart = mart) plot_totcounts(dds_macrophage, group = \"condition\") extended_anno <- fortify_annotations(anno_df_1 = anno_df,                                      anno_df_2 = anns,                                      dds = dds_macrophage) #> Found 2288 features with value NA in column gene_name (anno_df_1) #> Found 137 features with value NA in column external_gene_name (anno_df_2) #> Trying to resolve missing info in gene_name (anno_df_1) with info from external_gene_name (anno_df_2)... #> Found 127 features with value NA in the resolved gene name column #> You might want to add/edit additionally this annotation table... #> Updated rowData slot of the dds object by adding columns: anno_gene_id, anno_gene_name, anno_description extended_anno$anno_df |> head() #>                         gene_id gene_name external_gene_name #> ENSG00000000003 ENSG00000000003    TSPAN6             TSPAN6 #> ENSG00000000419 ENSG00000000419      DPM1               DPM1 #> ENSG00000000457 ENSG00000000457     SCYL3              SCYL3 #> ENSG00000000460 ENSG00000000460     FIRRM              FIRRM #> ENSG00000000938 ENSG00000000938       FGR                FGR #> ENSG00000000971 ENSG00000000971       CFH                CFH #>                                                                                                    description #> ENSG00000000003                                              tetraspanin 6 [Source:HGNC Symbol;Acc:HGNC:11858] #> ENSG00000000419 dolichyl-phosphate mannosyltransferase subunit 1, catalytic [Source:HGNC Symbol;Acc:HGNC:3005] #> ENSG00000000457                                   SCY1 like pseudokinase 3 [Source:HGNC Symbol;Acc:HGNC:19285] #> ENSG00000000460  FIGNL1 interacting regulator of recombination and mitosis [Source:HGNC Symbol;Acc:HGNC:25565] #> ENSG00000000938              FGR proto-oncogene, Src family tyrosine kinase [Source:HGNC Symbol;Acc:HGNC:3697] #> ENSG00000000971                                         complement factor H [Source:HGNC Symbol;Acc:HGNC:4883] extended_anno$dds #> class: DESeqDataSet  #> dim: 17806 24  #> metadata(7): tximetaInfo quantInfo ... txdbInfo version #> assays(3): counts abundance avgTxLength #> rownames(17806): ENSG00000000003 ENSG00000000419 ... ENSG00000285982 #>   ENSG00000285994 #> rowData names(5): gene_id SYMBOL anno_gene_id anno_gene_name #>   anno_description #> colnames(24): SAMEA103885102 SAMEA103885347 ... SAMEA103885308 #>   SAMEA103884949 #> colData names(15): names sample_id ... condition line tbl_normcounts <- deseq_normcounts_with_info(dds = dds_macrophage,                                              extended_anno_df = extended_anno$anno_df) #> using 'avgTxLength' from assays(dds), correcting for library size tbl_TPMs <- deseq_tpm_with_info(dds = dds_macrophage,                                 extended_anno_df = extended_anno$anno_df)"},{"path":"/articles/BIUMmisc_DE.html","id":"running-the-de-steps","dir":"Articles","previous_headings":"","what":"Running the DE steps","title":"Using the BIUMmisc package for DE analyses","text":"Creating DE results …","code":"dds_macrophage #> class: DESeqDataSet  #> dim: 17806 24  #> metadata(7): tximetaInfo quantInfo ... txdbInfo version #> assays(3): counts abundance avgTxLength #> rownames(17806): ENSG00000000003 ENSG00000000419 ... ENSG00000285982 #>   ENSG00000285994 #> rowData names(2): gene_id SYMBOL #> colnames(24): SAMEA103885102 SAMEA103885347 ... SAMEA103885308 #>   SAMEA103884949 #> colData names(15): names sample_id ... condition line design(dds_macrophage) #> ~line + condition dds_macrophage <- DESeq(dds_macrophage) #> estimating size factors #> using 'avgTxLength' from assays(dds), correcting for library size #> estimating dispersions #> gene-wise dispersion estimates #> mean-dispersion relationship #> final dispersion estimates #> fitting model and testing resultsNames(dds_macrophage) #> [1] \"Intercept\"                      \"line_eiwy_1_vs_diku_1\"          #> [3] \"line_fikt_3_vs_diku_1\"          \"line_ieki_2_vs_diku_1\"          #> [5] \"line_podx_1_vs_diku_1\"          \"line_qaqx_1_vs_diku_1\"          #> [7] \"condition_IFNg_vs_naive\"        \"condition_IFNg_SL1344_vs_naive\" #> [9] \"condition_SL1344_vs_naive\" myresuSet_macrophage <- list()  myresuSet_macrophage <-    create_DEresults(resuSet = myresuSet_macrophage,                    dds_obj = dds_macrophage,                    contrast_name = \"condition_IFNg_vs_naive\",                     FDR = 0.05,                    extended_anno_df = extended_anno$anno_df,                    species = \"Homo_sapiens\"                    ) #> Storing set of results in the element `condition_IFNg_vs_naive`... #> Extracting results... #> Performing LFC shrinkage... #> using 'apeglm' for LFC shrinkage. If used in published research, please cite: #>     Zhu, A., Ibrahim, J.G., Love, M.I. (2018) Heavy-tailed prior distributions for #>     sequence count data: removing the noise and preserving large differences. #>     Bioinformatics. https://doi.org/10.1093/bioinformatics/bty895 #> Summary MAplot... #> Extracting tables... #> Extracting DEtables... #> Generating interactive DEtable... myresuSet_macrophage <-    create_DEresults(resuSet = myresuSet_macrophage,                    dds_obj = dds_macrophage,                    contrast_name = \"condition_IFNg_vs_naive\",                     lfc_threshold = 0.6,                    FDR = 0.05,                    extended_anno_df = extended_anno$anno_df,                    species = \"Homo_sapiens\",                    name_res_entry = \"ifng-naive-lfc0.6\"                    ) #> Storing set of results in the element `ifng-naive-lfc0.6`... #> Extracting results... #> Performing LFC shrinkage... #> using 'apeglm' for LFC shrinkage. If used in published research, please cite: #>     Zhu, A., Ibrahim, J.G., Love, M.I. (2018) Heavy-tailed prior distributions for #>     sequence count data: removing the noise and preserving large differences. #>     Bioinformatics. https://doi.org/10.1093/bioinformatics/bty895 #> Summary MAplot... #> Extracting tables... #> Extracting DEtables... #> Generating interactive DEtable... myresuSet_macrophage <-    create_DEresults(resuSet = myresuSet_macrophage,                    dds_obj = dds_macrophage,                    contrast_name = \"condition_IFNg_vs_naive\",                     lfc_threshold = 1,                    FDR = 0.05,                    extended_anno_df = extended_anno$anno_df,                    species = \"Homo_sapiens\",                    name_res_entry = \"ifng-naive-lfc1\"                    ) #> Storing set of results in the element `ifng-naive-lfc1`... #> Extracting results... #> Performing LFC shrinkage... #> using 'apeglm' for LFC shrinkage. If used in published research, please cite: #>     Zhu, A., Ibrahim, J.G., Love, M.I. (2018) Heavy-tailed prior distributions for #>     sequence count data: removing the noise and preserving large differences. #>     Bioinformatics. https://doi.org/10.1093/bioinformatics/bty895 #> Summary MAplot... #> Extracting tables... #> Extracting DEtables... #> Generating interactive DEtable... genes_of_interest <- c(   \"ENSG00000125347\",   # IRF1   \"ENSG00000110944\",   # IL23A   \"ENSG00000084636\",   # COL16A1   \"ENSG00000172399\"    # MYOZ2 )  plot_ma(res_obj = myresuSet_macrophage$`ifng-naive-lfc1`$res_DESeq,          intgenes = genes_of_interest) plot_volcano(res_obj = myresuSet_macrophage$`ifng-naive-lfc1`$res_DESeq,              ylim_up = 40,              intgenes = genes_of_interest) # TODO: adjust the y limit # TODO: add text ready to be ggplotlified?"},{"path":"/articles/BIUMmisc_DE.html","id":"after-the-de-steps-functional-enrichment","dir":"Articles","previous_headings":"","what":"After the DE steps: functional enrichment","title":"Using the BIUMmisc package for DE analyses","text":"iterate contrasts myresuSet object","code":"extended_anno_df <- extended_anno$anno_df expressedInAssay <- (rowSums(assay(dds_macrophage))>0) geneUniverseExprENS <- rownames(dds_macrophage)[expressedInAssay] geneUniverseExpr <- extended_anno_df$gene_name[match(geneUniverseExprENS, extended_anno_df$gene_id)] for(i in names(myresuSet_macrophage)) {   message(i)   if(nrow(myresuSet_macrophage[[i]][[\"tbl_res_DE\"]]) > 0) {   myresuSet_macrophage[[i]][[\"topGO_tbl\"]] <-      topGOtable(DEgenes = myresuSet_macrophage[[i]][[\"tbl_res_DE\"]]$gene_name,                 BGgenes = geneUniverseExpr,                 ontology = \"BP\",                geneID = \"symbol\",                addGeneToTerms=TRUE,                 topTablerows = 500,                mapping = \"org.Hs.eg.db\")   } } #> condition_IFNg_vs_naive #>  #> Building most specific GOs ..... #>  ( 11445 GO terms found. ) #>  #> Build GO DAG topology .......... #>  ( 14788 GO terms and 33231 relations. ) #>  #> Annotating nodes ............... #>  ( 13154 genes annotated to the GO terms. ) #>  #>           -- Elim Algorithm --  #>  #>       the algorithm is scoring 6114 nontrivial nodes #>       parameters:  #>           test statistic: fisher #>           cutOff: 0.01 #>  #>   Level 19:  2 nodes to be scored    (0 eliminated genes) #>  #>   Level 18:  3 nodes to be scored    (0 eliminated genes) #>  #>   Level 17:  9 nodes to be scored    (0 eliminated genes) #>  #>   Level 16:  32 nodes to be scored   (0 eliminated genes) #>  #>   Level 15:  49 nodes to be scored   (117 eliminated genes) #>  #>   Level 14:  66 nodes to be scored   (172 eliminated genes) #>  #>   Level 13:  118 nodes to be scored  (293 eliminated genes) #>  #>   Level 12:  270 nodes to be scored  (451 eliminated genes) #>  #>   Level 11:  491 nodes to be scored  (754 eliminated genes) #>  #>   Level 10:  730 nodes to be scored  (1400 eliminated genes) #>  #>   Level 9:   871 nodes to be scored  (1886 eliminated genes) #>  #>   Level 8:   933 nodes to be scored  (2732 eliminated genes) #>  #>   Level 7:   917 nodes to be scored  (3937 eliminated genes) #>  #>   Level 6:   779 nodes to be scored  (4746 eliminated genes) #>  #>   Level 5:   468 nodes to be scored  (5476 eliminated genes) #>  #>   Level 4:   262 nodes to be scored  (5732 eliminated genes) #>  #>   Level 3:   96 nodes to be scored   (6108 eliminated genes) #>  #>   Level 2:   17 nodes to be scored   (8342 eliminated genes) #>  #>   Level 1:   1 nodes to be scored    (8342 eliminated genes) #>  #>           -- Classic Algorithm --  #>  #>       the algorithm is scoring 6114 nontrivial nodes #>       parameters:  #>           test statistic: fisher #> Warning in topGOtable(DEgenes = #> myresuSet_macrophage[[i]][[\"tbl_res_DE\"]]$gene_name, : NAs introduced by #> coercion #> ifng-naive-lfc0.6 #>  #> Building most specific GOs ..... #>  ( 11445 GO terms found. ) #>  #> Build GO DAG topology .......... #>  ( 14788 GO terms and 33231 relations. ) #>  #> Annotating nodes ............... #>  ( 13154 genes annotated to the GO terms. ) #>  #>           -- Elim Algorithm --  #>  #>       the algorithm is scoring 5607 nontrivial nodes #>       parameters:  #>           test statistic: fisher #>           cutOff: 0.01 #>  #>   Level 19:  2 nodes to be scored    (0 eliminated genes) #>  #>   Level 18:  3 nodes to be scored    (0 eliminated genes) #>  #>   Level 17:  8 nodes to be scored    (12 eliminated genes) #>  #>   Level 16:  29 nodes to be scored   (19 eliminated genes) #>  #>   Level 15:  44 nodes to be scored   (118 eliminated genes) #>  #>   Level 14:  58 nodes to be scored   (220 eliminated genes) #>  #>   Level 13:  100 nodes to be scored  (326 eliminated genes) #>  #>   Level 12:  228 nodes to be scored  (400 eliminated genes) #>  #>   Level 11:  421 nodes to be scored  (709 eliminated genes) #>  #>   Level 10:  655 nodes to be scored  (1387 eliminated genes) #>  #>   Level 9:   775 nodes to be scored  (2159 eliminated genes) #>  #>   Level 8:   857 nodes to be scored  (2811 eliminated genes) #>  #>   Level 7:   864 nodes to be scored  (3608 eliminated genes) #>  #>   Level 6:   749 nodes to be scored  (4700 eliminated genes) #>  #>   Level 5:   450 nodes to be scored  (5276 eliminated genes) #>  #>   Level 4:   253 nodes to be scored  (6090 eliminated genes) #>  #>   Level 3:   93 nodes to be scored   (7118 eliminated genes) #>  #>   Level 2:   17 nodes to be scored   (7584 eliminated genes) #>  #>   Level 1:   1 nodes to be scored    (7584 eliminated genes) #>  #>           -- Classic Algorithm --  #>  #>       the algorithm is scoring 5607 nontrivial nodes #>       parameters:  #>           test statistic: fisher #> Warning in topGOtable(DEgenes = #> myresuSet_macrophage[[i]][[\"tbl_res_DE\"]]$gene_name, : NAs introduced by #> coercion #> ifng-naive-lfc1 #>  #> Building most specific GOs ..... #>  ( 11445 GO terms found. ) #>  #> Build GO DAG topology .......... #>  ( 14788 GO terms and 33231 relations. ) #>  #> Annotating nodes ............... #>  ( 13154 genes annotated to the GO terms. ) #>  #>           -- Elim Algorithm --  #>  #>       the algorithm is scoring 5010 nontrivial nodes #>       parameters:  #>           test statistic: fisher #>           cutOff: 0.01 #>  #>   Level 19:  2 nodes to be scored    (0 eliminated genes) #>  #>   Level 18:  3 nodes to be scored    (0 eliminated genes) #>  #>   Level 17:  7 nodes to be scored    (0 eliminated genes) #>  #>   Level 16:  25 nodes to be scored   (26 eliminated genes) #>  #>   Level 15:  40 nodes to be scored   (57 eliminated genes) #>  #>   Level 14:  46 nodes to be scored   (87 eliminated genes) #>  #>   Level 13:  75 nodes to be scored   (244 eliminated genes) #>  #>   Level 12:  194 nodes to be scored  (310 eliminated genes) #>  #>   Level 11:  349 nodes to be scored  (574 eliminated genes) #>  #>   Level 10:  561 nodes to be scored  (972 eliminated genes) #>  #>   Level 9:   682 nodes to be scored  (1505 eliminated genes) #>  #>   Level 8:   768 nodes to be scored  (2174 eliminated genes) #>  #>   Level 7:   791 nodes to be scored  (2817 eliminated genes) #>  #>   Level 6:   690 nodes to be scored  (3303 eliminated genes) #>  #>   Level 5:   427 nodes to be scored  (3956 eliminated genes) #>  #>   Level 4:   241 nodes to be scored  (4122 eliminated genes) #>  #>   Level 3:   91 nodes to be scored   (4619 eliminated genes) #>  #>   Level 2:   17 nodes to be scored   (5149 eliminated genes) #>  #>   Level 1:   1 nodes to be scored    (5149 eliminated genes) #>  #>           -- Classic Algorithm --  #>  #>       the algorithm is scoring 5010 nontrivial nodes #>       parameters:  #>           test statistic: fisher #> Warning in topGOtable(DEgenes = #> myresuSet_macrophage[[i]][[\"tbl_res_DE\"]]$gene_name, : NAs introduced by #> coercion library(\"clusterProfiler\") #> clusterProfiler v4.13.0  For help: https://yulab-smu.top/biomedical-knowledge-mining-book/ #>  #> If you use clusterProfiler in published research, please cite: #> T Wu, E Hu, S Xu, M Chen, P Guo, Z Dai, T Feng, L Zhou, W Tang, L Zhan, X Fu, S Liu, X Bo, and G Yu. clusterProfiler 4.0: A universal enrichment tool for interpreting omics data. The Innovation. 2021, 2(3):100141 #>  #> Attaching package: 'clusterProfiler' #> The following object is masked from 'package:biomaRt': #>  #>     select #> The following object is masked from 'package:AnnotationDbi': #>  #>     select #> The following object is masked from 'package:IRanges': #>  #>     slice #> The following object is masked from 'package:S4Vectors': #>  #>     rename #> The following object is masked from 'package:stats': #>  #>     filter for(i in names(myresuSet_macrophage)) {   message(i)   if(nrow(myresuSet_macrophage[[i]][[\"tbl_res_DE\"]]) > 0) {     myresuSet_macrophage[[i]][[\"clupro_tbl\"]] <-        enrichGO(         gene = myresuSet_macrophage[[i]][[\"tbl_res_DE\"]]$gene_name,         universe      = geneUniverseExpr,         keyType       = \"SYMBOL\",         OrgDb         = org.Hs.eg.db,         ont           = \"BP\",         pAdjustMethod = \"BH\",         pvalueCutoff  = 0.01,         qvalueCutoff  = 0.05,         readable      = FALSE)   } } #> condition_IFNg_vs_naive #> ifng-naive-lfc0.6 #> ifng-naive-lfc1"},{"path":"/articles/BIUMmisc_DE.html","id":"wrapping-up-a-de-report","dir":"Articles","previous_headings":"","what":"Wrapping up a DE report","title":"Using the BIUMmisc package for DE analyses","text":"transforming gtl    exporting ","code":"gtl_macs_ifng_naive <- resuset_to_gtl(myresuSet_macrophage,                                        result_name = \"ifng-naive-lfc0.6\",                                       dds = dds_macrophage,                                       anno_df = extended_anno_df) #> Found 500 gene sets in `topGOtableResult` object. #> Converting for usage in GeneTonic... #> --------------------------------- #> ----- GeneTonicList object ------ #> --------------------------------- #>  #> ----- dds object ----- #> Providing an expression object (as DESeqDataset) of 17806 features over 24 samples #>  #> ----- res_de object ----- #> Providing a DE result object (as DESeqResults), 17806 features tested, 1870 found as DE #> Upregulated:     1109 #> Downregulated:   761 #>  #> ----- res_enrich object ----- #> Providing an enrichment result object, 500 reported #>  #> ----- annotation_obj object ----- #> Providing an annotation object of 17806 features with information on 4 identifier types describe_gtl(gtl_macs_ifng_naive) #>  [1] \"---------------------------------\\n\"                                                       #>  [2] \"----- GeneTonicList object ------\\n\"                                                       #>  [3] \"---------------------------------\\n\"                                                       #>  [4] \"\\n----- dds object -----\\n\"                                                                #>  [5] \"Providing an expression object (as DESeqDataset) of 17806 features over 24 samples\\n\"      #>  [6] \"\\n----- res_de object -----\\n\"                                                             #>  [7] \"Providing a DE result object (as DESeqResults), 17806 features tested, 1870 found as DE\\n\" #>  [8] \"Upregulated:     1109\\n\"                                                                   #>  [9] \"Downregulated:   761\\n\"                                                                    #> [10] \"\\n----- res_enrich object -----\\n\"                                                         #> [11] \"Providing an enrichment result object, 500 reported\\n\"                                     #> [12] \"\\n----- annotation_obj object -----\\n\"                                                     #> [13] \"Providing an annotation object of 17806 features with information on 4 identifier types\\n\" vst_macrophage <- vst(dds_macrophage) gs_heatmap(se = vst_macrophage,            gtl = gtl_macs_ifng_naive,            geneset_id = \"GO:0034341\",            cluster_columns = TRUE,            cluster_rows = TRUE,            anno_col_info = \"condition\" ) signature_volcano(gtl = gtl_macs_ifng_naive,                   geneset_id = \"GO:0034341\",                   FDR = 0.05 ) #> Warning: ggrepel: 23 unlabeled data points (too many overlaps). Consider #> increasing max.overlaps gs_scoresheat(   mat = gs_scores(     se = vst_macrophage,     gtl = gtl_macs_ifng_naive),   n_gs = 30 ) exportr(myresuSet_macrophage,         out_file_prefix = \"fedetest\", out_folder = \"dirtest\") #> Exporting the whole set for fedetest #>     fedetest  ---  condition_IFNg_vs_naive #>         Exporting results from DESeq... #>           dirtest/fedetest_condition_IFNg_vs_naive_tbl_res_DESeq.xlsx #>         Exporting results from topGO... #>           dirtest/fedetest_condition_IFNg_vs_naive_tbl_topGOres.xlsx #>         Exporting results from clusterProfiler... #>           dirtest/fedetest_condition_IFNg_vs_naive_tbl_cluPro.xlsx #>     fedetest  ---  ifng-naive-lfc0.6 #>         Exporting results from DESeq... #>           dirtest/fedetest_ifng-naive-lfc0.6_tbl_res_DESeq.xlsx #>         Exporting results from topGO... #>           dirtest/fedetest_ifng-naive-lfc0.6_tbl_topGOres.xlsx #>         Exporting results from clusterProfiler... #>           dirtest/fedetest_ifng-naive-lfc0.6_tbl_cluPro.xlsx #>     fedetest  ---  ifng-naive-lfc1 #>         Exporting results from DESeq... #>           dirtest/fedetest_ifng-naive-lfc1_tbl_res_DESeq.xlsx #>         Exporting results from topGO... #>           dirtest/fedetest_ifng-naive-lfc1_tbl_topGOres.xlsx #>         Exporting results from clusterProfiler... #>           dirtest/fedetest_ifng-naive-lfc1_tbl_cluPro.xlsx"},{"path":"/articles/BIUMmisc_DE.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Using the BIUMmisc package for DE analyses","text":"","code":"BiocManager::version() #> [1] '3.20' sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: aarch64-apple-darwin20 #> Running under: macOS Sonoma 14.5 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: UTC #> tzcode source: internal #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] clusterProfiler_4.13.0      biomaRt_2.61.2              #>  [3] macrophage_1.21.0           ideal_1.29.0                #>  [5] pcaExplorer_2.31.0          GeneTonic_2.9.0             #>  [7] org.Hs.eg.db_3.19.1         topGO_2.57.0                #>  [9] SparseM_1.84                GO.db_3.19.1                #> [11] AnnotationDbi_1.67.0        graph_1.83.0                #> [13] DESeq2_1.45.0               SummarizedExperiment_1.35.1 #> [15] Biobase_2.65.0              MatrixGenerics_1.17.0       #> [17] matrixStats_1.3.0           GenomicRanges_1.57.1        #> [19] GenomeInfoDb_1.41.1         IRanges_2.39.0              #> [21] S4Vectors_0.43.0            BiocGenerics_0.51.0         #> [23] BIUMmisc_0.1.0              #>  #> loaded via a namespace (and not attached): #>   [1] GSEABase_1.67.0          progress_1.2.3           DT_0.33                  #>   [4] Biostrings_2.73.1        vctrs_0.6.5              digest_0.6.36            #>   [7] png_0.1-8                shape_1.4.6.1            shinyBS_0.61.1           #>  [10] registry_0.5-1           ggrepel_0.9.5            MASS_7.3-61              #>  [13] pkgdown_2.0.9.9000       reshape2_1.4.4           httpuv_1.6.15            #>  [16] foreach_1.5.2            qvalue_2.37.0            withr_3.0.0              #>  [19] xfun_0.45                ggfun_0.1.5              survival_3.7-0           #>  [22] memoise_2.0.1            gson_0.1.0               BiasedUrn_2.0.12         #>  [25] systemfonts_1.1.0        ragg_1.3.2               tidytree_0.4.6           #>  [28] GlobalOptions_0.1.2      gtools_3.9.5             prettyunits_1.2.0        #>  [31] KEGGREST_1.45.1          promises_1.3.0           httr_1.4.7               #>  [34] restfulr_0.0.15          rstudioapi_0.16.0        shinyAce_0.4.2           #>  [37] UCSC.utils_1.1.0         miniUI_0.1.1.1           generics_0.1.3           #>  [40] DOSE_3.31.2              base64enc_0.1-3          curl_5.2.1               #>  [43] zlibbioc_1.51.1          ggraph_2.2.1             polyclip_1.10-6          #>  [46] ca_0.71.1                GenomeInfoDbData_1.2.12  SparseArray_1.5.10       #>  [49] RBGL_1.81.0              threejs_0.3.3            xtable_1.8-4             #>  [52] stringr_1.5.1            desc_1.4.3               doParallel_1.0.17        #>  [55] evaluate_0.24.0          S4Arrays_1.5.1           BiocFileCache_2.13.0     #>  [58] hms_1.1.3                colorspace_2.1-0         filelock_1.0.3           #>  [61] visNetwork_2.1.2         shinyWidgets_0.8.6       magrittr_2.0.3           #>  [64] Rgraphviz_2.49.0         later_1.3.2              viridis_0.6.5            #>  [67] ggtree_3.13.0            lattice_0.22-6           NMF_0.27                 #>  [70] genefilter_1.87.0        XML_3.99-0.17            shadowtext_0.1.3         #>  [73] cowplot_1.1.3            pillar_1.9.0             nlme_3.1-165             #>  [76] iterators_1.0.14         gridBase_0.4-7           caTools_1.18.2           #>  [79] compiler_4.4.1           stringi_1.8.4            shinycssloaders_1.0.0    #>  [82] Category_2.71.0          TSP_1.2-4                dendextend_1.17.1        #>  [85] GenomicAlignments_1.41.0 plyr_1.8.9               crayon_1.5.3             #>  [88] abind_1.4-5              BiocIO_1.15.0            gridGraphics_0.5-1       #>  [91] emdbook_1.3.13           locfit_1.5-9.10          graphlayouts_1.1.1       #>  [94] bit_4.0.5                UpSetR_1.4.0             dplyr_1.1.4              #>  [97] fastmatch_1.1-4          codetools_0.2-20         textshaping_0.4.0        #> [100] crosstalk_1.2.1          bslib_0.7.0              slam_0.1-50              #> [103] GetoptLong_1.0.5         plotly_4.10.4            mime_0.12                #> [106] mosdef_1.1.0             splines_4.4.1            circlize_0.4.16          #> [109] Rcpp_1.0.12              dbplyr_2.5.0             tippy_0.1.0              #> [112] HDO.db_0.99.1            knitr_1.47               blob_1.2.4               #> [115] utf8_1.2.4               clue_0.3-65              apeglm_1.27.1            #> [118] fs_1.6.4                 backbone_2.1.4           IHW_1.33.0               #> [121] expm_0.999-9             ggplotify_0.1.2          tibble_3.2.1             #> [124] Matrix_1.7-0             statmod_1.5.0            tweenr_2.0.3             #> [127] pkgconfig_2.0.3          pheatmap_1.0.12          tools_4.4.1              #> [130] cachem_1.1.0             RSQLite_2.3.7            viridisLite_0.4.2        #> [133] DBI_1.2.3                numDeriv_2016.8-1.1      fastmap_1.2.0            #> [136] rmarkdown_2.27           scales_1.3.0             grid_4.4.1               #> [139] shinydashboard_0.7.2     Rsamtools_2.21.0         sass_0.4.9               #> [142] patchwork_1.2.0          coda_0.19-4.1            BiocManager_1.30.23      #> [145] farver_2.1.2             tidygraph_1.3.1          scatterpie_0.2.3         #> [148] mgcv_1.9-1               yaml_2.3.8               AnnotationForge_1.47.1   #> [151] rtracklayer_1.65.0       cli_3.6.3                purrr_1.0.2              #> [154] writexl_1.5.0            txdbmaker_1.1.1          webshot_0.5.5            #> [157] lifecycle_1.0.4          mvtnorm_1.2-5            sessioninfo_1.2.2        #> [160] rintrojs_0.3.4           BiocParallel_1.39.0      annotate_1.83.0          #> [163] gtable_0.3.5             rjson_0.2.21             ggridges_0.5.6           #> [166] parallel_4.4.1           ape_5.8                  limma_3.61.2             #> [169] jsonlite_1.8.8           colourpicker_1.3.0       seriation_1.5.5          #> [172] bitops_1.0-7             ggplot2_3.5.1            bit64_4.0.5              #> [175] assertthat_0.2.1         yulab.utils_0.1.4        heatmaply_1.5.0          #> [178] geneLenDataBase_1.41.2   bs4Dash_2.3.3            bdsmatrix_1.3-7          #> [181] jquerylib_0.1.4          highr_0.11               GOSemSim_2.31.0          #> [184] lazyeval_0.2.2           shiny_1.8.1.1            dynamicTreeCut_1.63-1    #> [187] htmltools_0.5.8.1        enrichplot_1.25.0        rappdirs_0.3.3           #> [190] glue_1.7.0               httr2_1.0.1              XVector_0.45.0           #> [193] RCurl_1.98-1.14          treeio_1.29.0            ComplexUpset_1.3.3       #> [196] gridExtra_2.3            igraph_2.0.3             R6_2.5.1                 #> [199] tidyr_1.3.1              gplots_3.1.3.1           fdrtool_1.2.17           #> [202] labeling_0.4.3           GenomicFeatures_1.57.0   cluster_2.1.6            #> [205] rngtools_1.5.2           bbmle_1.0.25.1           aplot_0.2.3              #> [208] DelayedArray_0.31.3      tidyselect_1.2.1         GOstats_2.71.0           #> [211] ggforce_0.4.2            xml2_1.3.6               munsell_0.5.1            #> [214] KernSmooth_2.23-24       goseq_1.57.2             data.table_1.15.4        #> [217] htmlwidgets_1.6.4        fgsea_1.31.0             ComplexHeatmap_2.21.0    #> [220] RColorBrewer_1.1-3       rlang_1.1.4              rentrez_1.2.3            #> [223] lpsymphony_1.33.0        fansi_1.0.6"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"a1 a2. Author. a1 a2. Author. a1 a2. Author. Federico Marini. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"a2 , a2 , a2 , Marini F (2024). BIUMmisc: collection functions scripts commonly used BIUM-MZ Core Facility Bioinformatics group IMBEI. R package version 0.1.0, https://github.com/imbeimainz/BIUMmisc.","code":"@Manual{,   title = {BIUMmisc: A collection of functions and scripts commonly used by the BIUM-MZ Core Facility and the Bioinformatics group at the IMBEI},   author = {a1 a2 and a1 a2 and a1 a2 and Federico Marini},   year = {2024},   note = {R package version 0.1.0},   url = {https://github.com/imbeimainz/BIUMmisc}, }"},{"path":"/index.html","id":"biummisc","dir":"","previous_headings":"","what":"A collection of functions and scripts commonly used by the BIUM-MZ Core Facility and the Bioinformatics group at the IMBEI","title":"A collection of functions and scripts commonly used by the BIUM-MZ Core Facility and the Bioinformatics group at the IMBEI","text":"collection R functions scripts commonly used BIUM-MZ Core Facility Bioinformatics group IMBEI. can browse package contents https://imbeimainz.github.io/BIUMmisc/.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A collection of functions and scripts commonly used by the BIUM-MZ Core Facility and the Bioinformatics group at the IMBEI","text":"can install development version BIUMmisc GitHub :","code":"library(\"remotes\") remotes::install_github(\"imbeimainz/BIUMmisc\")  # this one installs also all the Suggested dependencies and builds the vignette remotes::install_github(\"imbeimainz/BIUMmisc\",                           dependencies = TRUE,                          build_vignettes = TRUE)"},{"path":"/index.html","id":"contributing-guidelines","dir":"","previous_headings":"Installation","what":"Contributing guidelines","title":"A collection of functions and scripts commonly used by the BIUM-MZ Core Facility and the Bioinformatics group at the IMBEI","text":"Place function(s) R script named way makes easy guess ’s inside. Use Roxygen document function(s). useful tags: @title, @description, @details, @param, @return, @author, @examples, @export, @import/@importFrom. possible, add example Roxygen preamble show run function. possible, add one unit tests check function(s) work intended (using testthat). function uses functions defined packages, import latter adding @importFrom package function Roxygen preamble. document package (e.g. using devtools::document()) regenerate NAMESPACE file. ’s also considered good practice refer external functions package::function code, avoid namespace clashes. far possible, avoid hardcoding options (e.g., point sizes plots, things someone might want change). Instead provide arguments function. Generally, ’s good keep functions small (single thing), easier testing increased modularity. example, function calculations plotting, can often better split two functions, clearly defined scope.","code":""},{"path":"/reference/BIUMmisc-pkg.html","id":null,"dir":"Reference","previous_headings":"","what":"BIUMmisc — BIUMmisc-pkg","title":"BIUMmisc — BIUMmisc-pkg","text":"collection functions scripts commonly used BIUM-MZ Core Facility Bioinformatics group IMBEI.","code":""},{"path":[]},{"path":"/reference/BIUMmisc-pkg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"BIUMmisc — BIUMmisc-pkg","text":"Maintainer: Federico Marini marinif@uni-mainz.de (ORCID) Authors: a1 a2 ab@c.d (ORCID) a1 a2 ab@c.d (ORCID) a1 a2 ab@c.d (ORCID)","code":""},{"path":"/reference/count_up_till_death.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints out the timestamp — count_up_till_death","title":"Prints out the timestamp — count_up_till_death","text":"Prints timestamp console file. Useful diagnosing potential failures terminal server session.","code":""},{"path":"/reference/count_up_till_death.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints out the timestamp — count_up_till_death","text":"","code":"count_up_till_death(   file_out,   extrainfo = NULL,   secs_interval = 60,   max_lines = 10000,   verbose = TRUE )"},{"path":"/reference/count_up_till_death.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints out the timestamp — count_up_till_death","text":"file_out Character, path filename print series timestamps extrainfo Character, specifies extra information print timestamp recorded. Defaults secs_interval Numeric value, specifying interval seconds repeat timestamp operation max_lines Integer, number max lines record - time interval covered depend secs_interval. mainly avoid really endless loop able stop process. verbose Logical, defaults TRUE","code":""},{"path":"/reference/count_up_till_death.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prints out the timestamp — count_up_till_death","text":"Invisible NULL - output much side effect printing timestamp file","code":""},{"path":"/reference/count_up_till_death.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prints out the timestamp — count_up_till_death","text":"","code":"# count_up_till_death(\"mytestfile.txt\", extrainfo = \"YourName\")"},{"path":"/reference/create_DEresults.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — create_DEresults","title":"Title — create_DEresults","text":"Title","code":""},{"path":"/reference/create_DEresults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — create_DEresults","text":"","code":"create_DEresults(   resuSet = NULL,   dds_obj,   contrast_name,   FDR = 0.05,   lfc_threshold = 0,   extended_anno_df,   species = \"Homo_sapiens\",   name_res_entry = contrast_name,   verbose = TRUE )"},{"path":"/reference/create_DEresults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — create_DEresults","text":"resuSet list, provided format expected resuSet specifications. can empty list, object never created beforehand, otherwise function can simply add set results output new element existing list. Defaults NULL, lead creation new list object. desired behavior, please provide existing object structured resuSet. dds_obj DESeqDataset object, meaningfully related/matched resuSet object. contrast_name Character string, specifying name contrast extracted FDR Numeric value, specifying false discovery rate value used lfc_threshold Numeric value, corresponding logFC theshold used extract results - relevant call results() differ (lot, conceptually) logFC filtering commonly performed post-hoc, testing default null hypothesis (logFC = 0), might liberal cases. extended_anno_df annotation data.frame following columns: gene_id gene_name (mandatory), description (optional, can retrieved via biomaRt) species Character string, specifying species dataset investigation. Defaults \"Homo_sapiens\", also \"Mus_musculus\" similarly assembled character strings. relevant creating buttons interactive versions results tables. name_res_entry Character string verbose Logical","code":""},{"path":"/reference/create_DEresults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — create_DEresults","text":"resuSet list object.","code":""},{"path":"/reference/create_DEresults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — create_DEresults","text":"","code":"# TODO"},{"path":"/reference/create_folder_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Create folder structure — create_folder_structure","title":"Create folder structure — create_folder_structure","text":"Create folder structure","code":""},{"path":"/reference/create_folder_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create folder structure — create_folder_structure","text":"","code":"create_folder_structure(rootname = paste0(Sys.Date(), \"_newproject_RENAME_ME\"))"},{"path":"/reference/create_folder_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create folder structure — create_folder_structure","text":"rootname Character string, corresponding name main folder created. ideally follow schema: [person_identifier]_[cooperation_partner_name]_[project_related_keyword]","code":""},{"path":"/reference/create_folder_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create folder structure — create_folder_structure","text":"Creates designed folder structure desired location","code":""},{"path":"/reference/create_folder_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create folder structure — create_folder_structure","text":"","code":"# An example"},{"path":"/reference/deseq_normcounts_with_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalized counts table, with extra info — deseq_normcounts_with_info","title":"Normalized counts table, with extra info — deseq_normcounts_with_info","text":"Normalized counts table, extra info","code":""},{"path":"/reference/deseq_normcounts_with_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalized counts table, with extra info — deseq_normcounts_with_info","text":"","code":"deseq_normcounts_with_info(dds, extended_anno_df)"},{"path":"/reference/deseq_normcounts_with_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalized counts table, with extra info — deseq_normcounts_with_info","text":"dds DESeqDataSet object extended_anno_df annotation data.frame following columns: gene_id gene_name (mandatory), description (optional, can retrieved via biomaRt)","code":""},{"path":"/reference/deseq_normcounts_with_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalized counts table, with extra info — deseq_normcounts_with_info","text":"data.frame object, normalized counts additional info features hand","code":""},{"path":"/reference/deseq_normcounts_with_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalized counts table, with extra info — deseq_normcounts_with_info","text":"","code":"# TODO # ext_anno <- merge(anno_df, anns, by.x = \"gene_id\", by.y = \"ensembl_gene_id\")  # ... # writexl::write_xlsx(obj, \"exceltable.xlsx\")"},{"path":"/reference/deseq_tpm_with_info.html","id":null,"dir":"Reference","previous_headings":"","what":"TPM table with extended information — deseq_tpm_with_info","title":"TPM table with extended information — deseq_tpm_with_info","text":"TPM table extended information","code":""},{"path":"/reference/deseq_tpm_with_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TPM table with extended information — deseq_tpm_with_info","text":"","code":"deseq_tpm_with_info(dds, extended_anno_df)"},{"path":"/reference/deseq_tpm_with_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TPM table with extended information — deseq_tpm_with_info","text":"dds DESeqDataSet object extended_anno_df annotation data.frame following columns: gene_id gene_name (mandatory), description (optional, can retrieved via biomaRt)","code":""},{"path":"/reference/deseq_tpm_with_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TPM table with extended information — deseq_tpm_with_info","text":"data.frame object, TPM values additional info features hand","code":""},{"path":"/reference/deseq_tpm_with_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TPM table with extended information — deseq_tpm_with_info","text":"","code":"# TODO"},{"path":"/reference/exportr.html","id":null,"dir":"Reference","previous_headings":"","what":"Export the components of a resuSet object — exportr","title":"Export the components of a resuSet object — exportr","text":"Export components resuSet object","code":""},{"path":"/reference/exportr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export the components of a resuSet object — exportr","text":"","code":"exportr(resuSet, out_file_prefix = \"out_SET\", out_folder = \"_output\")"},{"path":"/reference/exportr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export the components of a resuSet object — exportr","text":"resuSet list, provided format expected resuSet specifications out_file_prefix String character, used prepend exported files. Defaults \"out_SET\", can meaningfully chosen match set results refers . out_folder String character, specifying folder tabular outputs generated. Defaults \"_output\", can also called \".\" specify current directory.","code":""},{"path":"/reference/exportr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export the components of a resuSet object — exportr","text":"Invisible NULL errors encountered","code":""},{"path":"/reference/exportr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export the components of a resuSet object — exportr","text":"","code":"# TODO"},{"path":"/reference/fortify_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Fortify different set of annotations — fortify_annotations","title":"Fortify different set of annotations — fortify_annotations","text":"Fortify different set annotations","code":""},{"path":"/reference/fortify_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fortify different set of annotations — fortify_annotations","text":"","code":"fortify_annotations(   anno_df_1,   anno_df_2,   id_1 = \"gene_id\",   id_2 = \"ensembl_gene_id\",   gene_name_1 = \"gene_name\",   gene_name_2 = \"external_gene_name\",   dds = NULL,   verbose = TRUE )"},{"path":"/reference/fortify_annotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fortify different set of annotations — fortify_annotations","text":"anno_df_1 data.frame object, corresponding first annotation table anno_df_2 data.frame object, corresponding second annotation table id_1 Character string, specifying column first table used identifier (defaults gene_id) id_2 Character string, specifying column second table used identifier (defaults ensembl_gene_id, biomaRt-like objects) gene_name_1 Character string, specifying column first table used gene name (defaults gene_name) gene_name_2 Character string, specifying column second table used identifier (defaults external_gene_name, taken e.g. biomaRt) dds DESeqDataset object verbose Logical, controlling verbosity level function","code":""},{"path":"/reference/fortify_annotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fortify different set of annotations — fortify_annotations","text":"list, including fortified annotation data frame (anno_df element), (provided input) dds object (dds object) information stored rowData slot.","code":""},{"path":"/reference/fortify_annotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fortify different set of annotations — fortify_annotations","text":"","code":"# TODO"},{"path":"/reference/plot_totcounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot total number of counts — plot_totcounts","title":"Plot total number of counts — plot_totcounts","text":"Plot total number counts","code":""},{"path":"/reference/plot_totcounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot total number of counts — plot_totcounts","text":"","code":"plot_totcounts(dds, group)"},{"path":"/reference/plot_totcounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot total number of counts — plot_totcounts","text":"dds DESeqDataset object group Character string, indicating one names columns colData slot dds","code":""},{"path":"/reference/plot_totcounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot total number of counts — plot_totcounts","text":"ggplot object","code":""},{"path":"/reference/plot_totcounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot total number of counts — plot_totcounts","text":"","code":"# TODO"},{"path":"/reference/resuset_to_gtl.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a resuSet into a GeneTonicList — resuset_to_gtl","title":"Convert a resuSet into a GeneTonicList — resuset_to_gtl","text":"Convert resuSet GeneTonicList object","code":""},{"path":"/reference/resuset_to_gtl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a resuSet into a GeneTonicList — resuset_to_gtl","text":"","code":"resuset_to_gtl(resuSet, result_name, which_enrich = \"topGO_tbl\", dds, anno_df)"},{"path":"/reference/resuset_to_gtl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a resuSet into a GeneTonicList — resuset_to_gtl","text":"resuSet list, provided format expected resuSet specifications result_name character, specifying result name resuSet object conversion performed which_enrich Character string, specifying enrichment results use. Currently defaults \"topGO_tbl\", extended formats - TODO dds DESeqDataset object, meaningfully related/matched resuSet object. anno_df data.frame specified requirements expected GeneTonic, .e. least columns gene_id gene_name specified","code":""},{"path":"/reference/resuset_to_gtl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a resuSet into a GeneTonicList — resuset_to_gtl","text":"GeneTonicList object, ready provided GeneTonic functions","code":""},{"path":"/reference/resuset_to_gtl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a resuSet into a GeneTonicList — resuset_to_gtl","text":"","code":"# TODO"},{"path":"/reference/run_salmon.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate commands to run salmon — run_salmon","title":"Generate commands to run salmon — run_salmon","text":"Generate commands run salmon files standardized sample sheet ones exchange collaboration partners","code":""},{"path":"/reference/run_salmon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate commands to run salmon — run_salmon","text":"","code":"run_salmon(   samples_info_sheet,   salmon_bin = \"salmon\",   salmon_index_dir,   salmon_output_dir = \"_quants\",   quants_prefix = \"sample_scenarioid_sampleid_\",   salmon_ncores = 12,   salmon_options = \"--validateMappings\",   create_script = TRUE,   script_name = \"salmonrunner.sh\",   display_commands = TRUE,   force = FALSE )"},{"path":"/reference/run_salmon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate commands to run salmon — run_salmon","text":"samples_info_sheet Character string, salmon_bin Character, specifying name executable run salmon. Defaults \"salmon\", perfectly fine tool available PATH, system wide (even better) conda environment salmon_index_dir Character, defines folder salmon index located. Needs specified user. salmon_output_dir Character, specifies folder outputs salmon written . Sensibly defaults \"_quants\", matches folder structure familiar quants_prefix Character - string prepended values id field samples_info_sheet salmon_ncores Numeric, number cores used salmon salmon_options Character string, contains additional salmon parameters. Defaults --validateMappings, also empty string set NULL create_script Logical value, whether create script - name specified script_name script_name Character string, name script write commands . Defaults \"salmonrunner.sh\" display_commands Logical, whether print console commands message. Defaults TRUE force Logical value, whether overwrite file script_name already existing. Defaults FALSE","code":""},{"path":"/reference/run_salmon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate commands to run salmon — run_salmon","text":"Invisible NULL, function prints commands messages file, optionally","code":""},{"path":"/reference/run_salmon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate commands to run salmon — run_salmon","text":"","code":"mysheet <- samplesheet_creator(ss_filename = \"mysheet\", ss_dir = tempdir()) #> Created a new sample sheet for 4 samples with the following fields: #> id, fastq_file1, fastq_file2, group, project_scenario, sample_id, quants_files, notes #> ------ #> Please make sure to fill in the respective info fields,  #> following the indications in the pre-filled cells run_salmon(readxl::read_excel(mysheet), salmon_index_dir = \"/myindex/dir\",            create_script = FALSE) #> Running salmon with index located at /myindex/dir #> Creating output quantifications at _quants #> salmon quant --index /myindex/dir --libType A -1 INFO: fill in with the location of the .fastq(.gz) files -2 INFO: fill in (if paired end data is available) -o _quants/sample_scenarioid_sampleid_id1 --threads 12 --validateMappings #> salmon quant --index /myindex/dir --libType A -r INFO: fill in with the location of the .fastq(.gz) files -o _quants/sample_scenarioid_sampleid_id2 --threads 12 --validateMappings #> salmon quant --index /myindex/dir --libType A -r INFO: fill in with the location of the .fastq(.gz) files -o _quants/sample_scenarioid_sampleid_id3 --threads 12 --validateMappings #> salmon quant --index /myindex/dir --libType A -r INFO: fill in with the location of the .fastq(.gz) files -o _quants/sample_scenarioid_sampleid_id4 --threads 12 --validateMappings"},{"path":"/reference/samplesheet_creator.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — samplesheet_creator","title":"Title — samplesheet_creator","text":"Title","code":""},{"path":"/reference/samplesheet_creator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — samplesheet_creator","text":"","code":"samplesheet_creator(   n_samples = 4,   ss_filename,   ss_dir = \".\",   extra_fields = NULL )"},{"path":"/reference/samplesheet_creator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — samplesheet_creator","text":"n_samples Numeric value, corresponds number samples included ss_filename Character string, basename excel file get generated ss_dir Character string, folder sample sheet generated . Defaults \".\" (current working directory). extra_fields Vector character strings, specifying names columns extra fields added.","code":""},{"path":"/reference/samplesheet_creator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — samplesheet_creator","text":"character string corresponding path Excel sample sheet created. Excel sheet created side effect.","code":""},{"path":"/reference/samplesheet_creator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — samplesheet_creator","text":"","code":"mysheet <- samplesheet_creator(ss_filename = \"mysheet\",                                ss_dir = tempdir()) #> Created a new sample sheet for 4 samples with the following fields: #> id, fastq_file1, fastq_file2, group, project_scenario, sample_id, quants_files, notes #> ------ #> Please make sure to fill in the respective info fields,  #> following the indications in the pre-filled cells mysheet #> [1] \"/private/var/folders/sx/mf6nj_sn1ll2crpml02qjgbr0000gn/T/RtmpGdP2xm/mysheet.xlsx\""},{"path":"/reference/sepguesser.html","id":null,"dir":"Reference","previous_headings":"","what":"Make an educated guess on the separator character — sepguesser","title":"Make an educated guess on the separator character — sepguesser","text":"function tries guess separator used text delimited file","code":""},{"path":"/reference/sepguesser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make an educated guess on the separator character — sepguesser","text":"","code":"sepguesser(file, sep_list = c(\",\", \"\\t\", \";\", \" \"))"},{"path":"/reference/sepguesser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make an educated guess on the separator character — sepguesser","text":"file name file data read sep_list vector containing candidates identified separators. Defaults c(\",\", \"\\t\", \";\",\" \")","code":""},{"path":"/reference/sepguesser.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make an educated guess on the separator character — sepguesser","text":"character value, corresponding guessed separator. One \",\" (comma), \"\\t\" (tab), \";\" (semicolon),\" \" (whitespace)","code":""},{"path":"/reference/sepguesser.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make an educated guess on the separator character — sepguesser","text":"","code":"sepguesser(system.file(\"extdata/design_commas.txt\",package = \"ideal\")) #> [1] \",\" sepguesser(system.file(\"extdata/design_semicolons.txt\",package = \"ideal\")) #> [1] \";\" sepguesser(system.file(\"extdata/design_spaces.txt\",package = \"ideal\")) #> [1] \" \" mysep <- sepguesser(system.file(\"extdata/design_tabs.txt\",package = \"ideal\"))  # to be used for reading in the same file, without having to specify the sep"},{"path":"/reference/sessioninfo_extra.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — sessioninfo_extra","title":"Title — sessioninfo_extra","text":"Title","code":""},{"path":"/reference/sessioninfo_extra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — sessioninfo_extra","text":"","code":"sessioninfo_extra(to_file = TRUE, out_file = NULL, add_date = FALSE)"},{"path":"/reference/sessioninfo_extra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — sessioninfo_extra","text":"to_file todo out_file todo add_date todo","code":""},{"path":"/reference/sessioninfo_extra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — sessioninfo_extra","text":"todo","code":""},{"path":"/reference/sessioninfo_extra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — sessioninfo_extra","text":"","code":"# todo"}]
