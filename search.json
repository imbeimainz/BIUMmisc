[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 BIUMmisc authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"a1 a2. Author. a1 a2. Author. a1 a2. Author. Federico Marini. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"a2 , a2 , a2 , Marini F (2024). BIUMmisc: collection functions scripts commonly used BIUM-MZ Core Facility Bioinformatics group IMBEI. R package version 0.1.0, https://github.com/imbeimainz/BIUMmisc.","code":"@Manual{,   title = {BIUMmisc: A collection of functions and scripts commonly used by the BIUM-MZ Core Facility and the Bioinformatics group at the IMBEI},   author = {a1 a2 and a1 a2 and a1 a2 and Federico Marini},   year = {2024},   note = {R package version 0.1.0},   url = {https://github.com/imbeimainz/BIUMmisc}, }"},{"path":"/index.html","id":"biummisc","dir":"","previous_headings":"","what":"A collection of functions and scripts commonly used by the BIUM-MZ Core Facility and the Bioinformatics group at the IMBEI","title":"A collection of functions and scripts commonly used by the BIUM-MZ Core Facility and the Bioinformatics group at the IMBEI","text":"collection R functions scripts commonly used BIUM-MZ Core Facility Bioinformatics group IMBEI. can browse package contents https://imbeimainz.github.io/BIUMmisc/.","code":""},{"path":"/index.html","id":"contributing-guidelines","dir":"","previous_headings":"","what":"Contributing guidelines","title":"A collection of functions and scripts commonly used by the BIUM-MZ Core Facility and the Bioinformatics group at the IMBEI","text":"Place function(s) R script named way makes easy guess ’s inside. Use Roxygen document function(s). useful tags: @title, @description, @details, @param, @return, @author, @examples, @export, @import/@importFrom. possible, add example Roxygen preamble show run function. possible, add one unit tests check function(s) work intended (using testthat). function uses functions defined packages, import latter adding @importFrom package function Roxygen preamble. document package (e.g. using devtools::document()) regenerate NAMESPACE file. ’s also considered good practice refer external functions package::function code, avoid namespace clashes. far possible, avoid hardcoding options (e.g., point sizes plots, things someone might want change). Instead provide arguments function. Generally, ’s good keep functions small (single thing), easier testing increased modularity. example, function calculations plotting, can often better split two functions, clearly defined scope.","code":""},{"path":"/reference/BIUMmisc-pkg.html","id":null,"dir":"Reference","previous_headings":"","what":"BIUMmisc — BIUMmisc-pkg","title":"BIUMmisc — BIUMmisc-pkg","text":"collection functions scripts commonly used BIUM-MZ Core Facility Bioinformatics group IMBEI.","code":""},{"path":[]},{"path":"/reference/BIUMmisc-pkg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"BIUMmisc — BIUMmisc-pkg","text":"Maintainer: Federico Marini marinif@uni-mainz.de (ORCID) Authors: a1 a2 ab@c.d (ORCID) a1 a2 ab@c.d (ORCID) a1 a2 ab@c.d (ORCID)","code":""},{"path":"/reference/count_up_till_death.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints out the timestamp — count_up_till_death","title":"Prints out the timestamp — count_up_till_death","text":"Prints timestamp console file. Useful diagnosing potential failures terminal server session.","code":""},{"path":"/reference/count_up_till_death.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints out the timestamp — count_up_till_death","text":"","code":"count_up_till_death(   file_out,   extrainfo = NULL,   secs_interval = 60,   max_lines = 10000,   verbose = TRUE )"},{"path":"/reference/count_up_till_death.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints out the timestamp — count_up_till_death","text":"file_out Character, path filename print series timestamps extrainfo Character, specifies extra information print timestamp recorded. Defaults secs_interval Numeric value, specifying interval seconds repeat timestamp operation max_lines Integer, number max lines record - time interval covered depend secs_interval. mainly avoid really endless loop able stop process. verbose Logical, defaults TRUE","code":""},{"path":"/reference/count_up_till_death.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prints out the timestamp — count_up_till_death","text":"Invisible NULL - output much side effect printing timestamp file","code":""},{"path":"/reference/count_up_till_death.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prints out the timestamp — count_up_till_death","text":"","code":"# count_up_till_death(\"mytestfile.txt\", extrainfo = \"YourName\")"},{"path":"/reference/create_folder_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Create folder structure — create_folder_structure","title":"Create folder structure — create_folder_structure","text":"Create folder structure","code":""},{"path":"/reference/create_folder_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create folder structure — create_folder_structure","text":"","code":"create_folder_structure(rootname = paste0(Sys.Date(), \"_newproject_RENAME_ME\"))"},{"path":"/reference/create_folder_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create folder structure — create_folder_structure","text":"rootname Character string, corresponding name main folder created. ideally follow schema: [person_identifier]_[cooperation_partner_name]_[project_related_keyword]","code":""},{"path":"/reference/create_folder_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create folder structure — create_folder_structure","text":"Creates designed folder structure desired location","code":""},{"path":"/reference/create_folder_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create folder structure — create_folder_structure","text":"","code":"# An example"},{"path":"/reference/run_salmon.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate commands to run salmon — run_salmon","title":"Generate commands to run salmon — run_salmon","text":"Generate commands run salmon files standardized sample sheet ones exchange collaboration partners","code":""},{"path":"/reference/run_salmon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate commands to run salmon — run_salmon","text":"","code":"run_salmon(   samples_info_sheet,   salmon_bin = \"salmon\",   salmon_index_dir,   salmon_output_dir = \"_quants\",   quants_prefix = \"sample_scenarioid_sampleid_\",   salmon_ncores = 12,   salmon_options = \"--validateMappings\",   create_script = TRUE,   script_name = \"salmonrunner.sh\",   display_commands = TRUE,   force = FALSE )"},{"path":"/reference/run_salmon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate commands to run salmon — run_salmon","text":"samples_info_sheet Character string, salmon_bin Character, specifying name executable run salmon. Defaults \"salmon\", perfectly fine tool available PATH, system wide (even better) conda environment salmon_index_dir Character, defines folder salmon index located. Needs specified user. salmon_output_dir Character, specifies folder outputs salmon written . Sensibly defaults \"_quants\", matches folder structure familiar quants_prefix Character - string prepended values id field samples_info_sheet salmon_ncores Numeric, number cores used salmon salmon_options Character string, contains additional salmon parameters. Defaults --validateMappings, also empty string set NULL create_script Logical value, whether create script - name specified script_name script_name Character string, name script write commands . Defaults \"salmonrunner.sh\" display_commands Logical, whether print console commands message. Defaults TRUE force Logical value, whether overwrite file script_name already existing. Defaults FALSE","code":""},{"path":"/reference/run_salmon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate commands to run salmon — run_salmon","text":"Invisible NULL, function prints commands messages file, optionally","code":""},{"path":"/reference/run_salmon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate commands to run salmon — run_salmon","text":"","code":"mysheet <- samplesheet_creator(ss_filename = \"mysheet\", ss_dir = tempdir()) #> Created a new sample sheet for 4 samples with the following fields: #> id, fastq_file1, fastq_file2, group, project_scenario, sample_id, quants_files, notes #> ------ #> Please make sure to fill in the respective info fields,  #> following the indications in the pre-filled cells run_salmon(readxl::read_excel(mysheet), salmon_index_dir = \"/myindex/dir\",            create_script = FALSE) #> Running salmon with index located at /myindex/dir #> Creating output quantifications at _quants #> salmon quant --index /myindex/dir --libType A -1 INFO: fill in with the location of the .fastq(.gz) files -2 INFO: fill in (if paired end data is available) -o _quants/sample_scenarioid_sampleid_id1 --threads 12 --validateMappings #> salmon quant --index /myindex/dir --libType A -r INFO: fill in with the location of the .fastq(.gz) files -o _quants/sample_scenarioid_sampleid_id2 --threads 12 --validateMappings #> salmon quant --index /myindex/dir --libType A -r INFO: fill in with the location of the .fastq(.gz) files -o _quants/sample_scenarioid_sampleid_id3 --threads 12 --validateMappings #> salmon quant --index /myindex/dir --libType A -r INFO: fill in with the location of the .fastq(.gz) files -o _quants/sample_scenarioid_sampleid_id4 --threads 12 --validateMappings"},{"path":"/reference/samplesheet_creator.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — samplesheet_creator","title":"Title — samplesheet_creator","text":"Title","code":""},{"path":"/reference/samplesheet_creator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — samplesheet_creator","text":"","code":"samplesheet_creator(   n_samples = 4,   ss_filename,   ss_dir = \".\",   extra_fields = NULL )"},{"path":"/reference/samplesheet_creator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — samplesheet_creator","text":"n_samples Numeric value, corresponds number samples included ss_filename Character string, basename excel file get generated ss_dir Character string, folder sample sheet generated . Defaults \".\" (current working directory). extra_fields Vector character strings, specifying names columns extra fields added.","code":""},{"path":"/reference/samplesheet_creator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — samplesheet_creator","text":"character string corresponding path Excel sample sheet created. Excel sheet created side effect.","code":""},{"path":"/reference/samplesheet_creator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — samplesheet_creator","text":"","code":"mysheet <- samplesheet_creator(ss_filename = \"mysheet\",                                ss_dir = tempdir()) #> Created a new sample sheet for 4 samples with the following fields: #> id, fastq_file1, fastq_file2, group, project_scenario, sample_id, quants_files, notes #> ------ #> Please make sure to fill in the respective info fields,  #> following the indications in the pre-filled cells mysheet #> [1] \"/private/var/folders/dm/88b38gj92jj53dgxdsm12qf00000gn/T/Rtmp1XvfrW/mysheet.xlsx\""},{"path":"/reference/sepguesser.html","id":null,"dir":"Reference","previous_headings":"","what":"Make an educated guess on the separator character — sepguesser","title":"Make an educated guess on the separator character — sepguesser","text":"function tries guess separator used text delimited file","code":""},{"path":"/reference/sepguesser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make an educated guess on the separator character — sepguesser","text":"","code":"sepguesser(file, sep_list = c(\",\", \"\\t\", \";\", \" \"))"},{"path":"/reference/sepguesser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make an educated guess on the separator character — sepguesser","text":"file name file data read sep_list vector containing candidates identified separators. Defaults c(\",\", \"\\t\", \";\",\" \")","code":""},{"path":"/reference/sepguesser.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make an educated guess on the separator character — sepguesser","text":"character value, corresponding guessed separator. One \",\" (comma), \"\\t\" (tab), \";\" (semicolon),\" \" (whitespace)","code":""},{"path":"/reference/sepguesser.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make an educated guess on the separator character — sepguesser","text":"","code":"sepguesser(system.file(\"extdata/design_commas.txt\",package = \"ideal\")) #> Warning: file(\"\") only supports open = \"w+\" and open = \"w+b\": using the former #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> [1] \",\" sepguesser(system.file(\"extdata/design_semicolons.txt\",package = \"ideal\")) #> Warning: file(\"\") only supports open = \"w+\" and open = \"w+b\": using the former #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> [1] \",\" sepguesser(system.file(\"extdata/design_spaces.txt\",package = \"ideal\")) #> Warning: file(\"\") only supports open = \"w+\" and open = \"w+b\": using the former #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> [1] \",\" mysep <- sepguesser(system.file(\"extdata/design_tabs.txt\",package = \"ideal\")) #> Warning: file(\"\") only supports open = \"w+\" and open = \"w+b\": using the former #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf  # to be used for reading in the same file, without having to specify the sep"},{"path":"/reference/sessioninfo_extra.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — sessioninfo_extra","title":"Title — sessioninfo_extra","text":"Title","code":""},{"path":"/reference/sessioninfo_extra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — sessioninfo_extra","text":"","code":"sessioninfo_extra(to_file = TRUE, out_file = NULL, add_date = FALSE)"},{"path":"/reference/sessioninfo_extra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — sessioninfo_extra","text":"to_file todo out_file todo add_date todo","code":""},{"path":"/reference/sessioninfo_extra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — sessioninfo_extra","text":"todo","code":""},{"path":"/reference/sessioninfo_extra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — sessioninfo_extra","text":"","code":"# todo"}]
