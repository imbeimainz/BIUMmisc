% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/salmon_runner.R
\name{run_salmon}
\alias{run_salmon}
\title{Generate commands to run salmon}
\usage{
run_salmon(
  samples_info_sheet,
  salmon_bin = "salmon",
  salmon_index_dir,
  salmon_output_dir = "_quants",
  quants_prefix = "sample_scenarioid_sampleid_",
  salmon_ncores = 12,
  salmon_options = "--validateMappings",
  create_script = TRUE,
  script_name = "salmonrunner.sh",
  display_commands = TRUE,
  force = FALSE
)
}
\arguments{
\item{samples_info_sheet}{Character string,}

\item{salmon_bin}{Character, specifying the name of the executable to be run
as \code{salmon}. Defaults to "salmon", which is perfectly fine if the tool is
available in the \code{PATH}, be that system wide or (even better) with a conda
environment}

\item{salmon_index_dir}{Character, defines the folder where the salmon index
is located. Needs to be specified by the user.}

\item{salmon_output_dir}{Character, specifies the folder where the outputs of
salmon will be written into. Sensibly defaults to "_quants", which matches
the folder structure we are familiar with}

\item{quants_prefix}{Character - what string should be prepended to the values
of the \code{id} field in the \code{samples_info_sheet}}

\item{salmon_ncores}{Numeric, number of cores to be used by salmon}

\item{salmon_options}{Character string, contains all additional salmon
parameters. Defaults to \code{--validateMappings}, but could also be an empty
string or set to \code{NULL}}

\item{create_script}{Logical value, whether to create or not a script - its
name is specified by \code{script_name}}

\item{script_name}{Character string, name of the script to write commands
into. Defaults to "salmonrunner.sh"}

\item{display_commands}{Logical, whether to print out to the console the
commands as message. Defaults to TRUE}

\item{force}{Logical value, whether to overwrite the file in \code{script_name} if
already existing. Defaults to FALSE}
}
\value{
Invisible \code{NULL}, the function prints out the commands as messages
\emph{and} as a file, optionally
}
\description{
Generate commands to run salmon on the files from a standardized sample sheet
as the ones we exchange with collaboration partners
}
\examples{
mysheet <- samplesheet_creator(ss_filename = "mysheet", ss_dir = tempdir())
run_salmon(readxl::read_excel(mysheet), salmon_index_dir = "/myindex/dir",
           create_script = FALSE)
}
